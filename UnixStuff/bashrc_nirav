#!/bin/bash

########################
### Nirav's .bashrc ####
########################

##############
### Prompt ###
##############

case “$TERM” in
    xterm-256color)
	PS1='[${debian_chroot:+($debian_chroot)}\[\033[00;31m\]\h\[\033[00m\]] \[\033[00;31m\]\w\[\033[00m\]\$ '
	;;
    xterm*)
	PS1='[${debian_chroot:+($debian_chroot)}\[\033[00;31m\]\h\[\033[00m\]] \[\033[00;31m\]\w\[\033[00m\]\$ '
	;;
    *)
	PS1='[${debian_chroot:+($debian_chroot)}\h] \w\$ '
	;;
esac


###############
### colors ####
###############

rgb_restore="\[\033[00m\]"
rgb_black="\[\033[00;30m\]"
rgb_firebrick="\[\033[00;31m\]"
rgb_red="\[\033[01;31m\]"
rgb_forest="\[\033[00;32m\]"
rgb_green="\[\033[01;32m\]"
rgb_brown="\[\033[00;33m\]"
rgb_yellow="\[\033[01;33m\]"
rgb_navy="\[\033[00;34m\]"
rgb_blue="\[\033[01;34m\]"
rgb_purple="\[\033[00;35m\]"
rgb_magenta="\[\033[01;35m\]"
rgb_cadet="\[\033[00;36m\]"
rgb_cyan="\[\033[01;36m\]"
rgb_gray="\[\033[00;37m\]"
rgb_white="\[\033[01;37m\]"
rgb_std="${rgb_white}"


####################
### Unix History ###
####################

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
export HISTFILESIZE=5000

#################
### Utilities ###
#################

extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1     ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
}


# Find a file with a pattern in name:
function ff() { find . -type f -iname '*'"$*"'*' -ls ; }

# Find a file with pattern $1 in name and Execute $2 on it:
function fe() { find . -type f -iname '*'"${1:-}"'*' \
-exec ${2:-file} {} \;  ; }

#dirsize - finds directory sizes and lists them for the current directory
dirsize () {
    du -shx * .[a-zA-Z0-9_]* 2> /dev/null | \
        egrep '^ *[0-9.]*[MG]' | sort -n > /tmp/list
    egrep '^ *[0-9.]*M' /tmp/list
    egrep '^ *[0-9.]*G' /tmp/list
    rm -rf /tmp/list
}

function fawk {
    first="awk '{print "
    last="}'"
    cmd="${first}\$${1}${last}"
    eval $cmd
}


#which can list aliases as well
which() {
  which_out=`/usr/bin/which $@`;
  if [ ! -z "$which_out" ]; then
    echo "$which_out";
  else
    type "$@";
  fi
}

# Who is holding open this damn port or file??
# usage: portopen 3000
function portopen {
	sudo lsof -P -i ":${1}"
}
function fileopen {
	sudo lsof "${1}"
}

function mydf()         # Pretty-print of 'df' output.
{                       # Inspired by 'dfc' utility.
    for fs ; do

        if [ ! -d $fs ]
        then
          echo -e $fs" :No such file or directory" ; continue
        fi

        local info=( $(command df -P $fs | awk 'END{ print $2,$3,$5 }') )
        local free=( $(command df -Pkh $fs | awk 'END{ print $4 }') )
        local nbstars=$(( 20 * ${info[1]} / ${info[0]} ))
        local out="["
        for ((j=0;j<20;j++)); do
            if [ ${j} -lt ${nbstars} ]; then
               out=$out"*"
            else
               out=$out"-"
            fi
        done
        out=${info[2]}" "$out"] ("$free" free on "$fs")"
        echo -e $out
    done
}



function repeat()       # Repeat n times command.
{
    local i max
    max=$1; shift;
    for ((i=1; i <= max ; i++)); do  # --> C-like syntax
        eval "$@";
    done
}


#############
### Alias ###
#############

alias .=pwd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ll='ls -lart'
alias lld='ls -lUd */'
alias c="clear"

###########
### GIT ###
###########
if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
fi

if [ -f ~/.git-prompt.sh ]; then
  GIT_PS1_SHOWUPSTREAM="auto"
  GIT_PS1_SHOWCOLORHINTS="yes"
  source ~/.git-prompt.sh
  export PROMPT_COMMAND='__git_ps1 "\u@\h:\W" "\\\$ ";'
fi


##############
### EDITOR ###
##############

export EDITOR=emacs


##########
### LS ###
##########

# enable color support of ls and also add handy aliases
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad


############
### LESS ###
############

alias more='less'
export PAGER=less
export LESSCHARSET='latin1'
export LESSOPEN='|/usr/bin/lesspipe.sh %s 2>&-'
                # Use this if lesspipe.sh exists.
export LESS='-i -N -w  -z-4 -g -M -X -R -P%t?f%f \
        :stdin .?pb%pb\%:?lbLine %lb:?bbByte %bb:-...'

# LESS man page colors (makes Man pages more readable).
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

###################
### FILE FINDER ###
###################

# Find a file with a pattern in name:
function ff() { find . -type f -iname '*'"$*"'*' -ls ; }

# Find a file with pattern $1 in name and Execute $2 on it:
function fe() { find . -type f -iname '*'"${1:-}"'*' \
-exec ${2:-file} {} \;  ; }
